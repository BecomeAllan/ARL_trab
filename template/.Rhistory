# Avaliando quais variaveis tem significância
h<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(h,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
h<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(h,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
h<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(h,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
h<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(h,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
h<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(h,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
h<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(h,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
h<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(h,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
h<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(h,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
h<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(h,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
h<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(h,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
h<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(h,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
h<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(h,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
k<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(h,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
print.xtable(xtable(k,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
k<- matrix(1:5)
print.xtable(xtable(k,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
# Avaliando quais variaveis tem significância
k<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(k,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
k<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(k,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
k<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(k,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
k<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(k,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
k<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(k,caption = c('Modelo 1'),
table.placement = "tbp",
caption.placement = "top") )
table(dados_train$X8)
modelo_inicial <- lm(X10 ~ X1adj*X8 + X6adj +X7*X8, data=dados_train)
summary(modelo_inicial)
print.xtable(xtable(summary(modelo_inicial),caption = c('Modelo 1'),
caption.placement = "top") )
shapiro.test(modelo_inicial$residuals)
shapiro.test(modelo_inicial$residuals)
xtable(shapiro.test(modelo_inicial$residuals))
k<-shapiro.test(modelo_inicial$residuals)
k$method
cbind(k$method, k$p.value)
rbind(k$method, k$p.value)
cbind(k$method, k$p.value)
print.xtable(xtable(cbind(k$method, k$p.value))
print.xtable(xtable(cbind(k$method, k$p.value)))
print.xtable(xtable(cbind(k$method, k$p.value)))
cbind(k$method, k$p.value))
cbind(k$method, k$p.value)
k<- cbind(k$method, k$p.value)
names(k)
k
k<-shapiro.test(modelo_inicial$residuals)
k<- cbind(k$method, k$p.value)
print.xtable(xtable(k))
# predições
predictions <- modelo_inicial_cox %>% predict(dados_valid)
anova(modelo_inicial_cox,modfim) # modelo 2 é melhor
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
datax <- read_excel(path ='Dados_trabalho_20212.xlsx')
datax <- na.omit(datax)
datax$X7 <- as.factor(datax$X7)
datax$X8 <- as.factor(datax$X8)
datax$ID <- as.factor(datax$ID)
# Dados ajustados
# Dados ajustados
data <- datax
datax_ajusdet <-datax %>% select_if(is.numeric) %>% scale()
datax[,paste0(colnames(datax_ajusdet), 'adj') ] <- datax_ajusdet
data <- datax
names(data) <- c('Número de Identificação', 'Duração da Internação', 'Idade', 'Risco de Infecção', 'Proporção de Culturas de Rotina', 'Proporção de Raio-X de Tórax de Rotina', 'Número de leitos', 'Filiação a Escola de Medicina', 'Região', 'Média diária de pacientes', 'Número de enfermeiro(s)', 'Facilidades e serviços disponíveis')
# Tabela de nomes X1: Nome variavel
Nome <- names(data)
Código <- names(datax)
Descrição <- c('1-113', 'Duração média da internação de todos os pacientes no hospital (em dias)', 'Idade média dos pacientes', 'Probabilidade média estimada de adquirir infecção no hospital (em %)', 'Razão do número de culturas realizadas com relação ao número de pacientes sem sinais ou sintomas de infeção adquirida no hospital, vezes 100.', 'Razão do número de Raio-X de Tórax realizados com relação ao número de pacientes sem sinais ou sintomas de pneumonia, vezes 100.', 'Número médio de leitos no hospital durante o período de estudo', '1 – sim 2 – não', 'Região Geográfica, onde: 1 – NE 2- NC 3 – S e 4 – W', 'Número médio de pacientes no hospital por dia durante o período do estudo', 'Número médio de enfermeiros(as) de tempo-integral ou equivalente registrados e licenciados durante o período de estudo ( número de tempos integrais+metade do número de tempo parcial)', '% de 35 potenciais facilidades e serviços que são fornecidos pelo hospital')
Classificação <- c('Qualitativa ordinal', 'Quantitativa contínua', 'Quantitativa contínua', 'Quantitativa contínua', 'Quantitativa contínua', 'Quantitativa contínua', 'Quantitativa contínua', 'Qualitativa ordinal', 'Qualitativa nominal', 'Quantitativa contínua', 'Quantitativa contínua', 'Quantitativa contínua')
library(knitr)
knitr::kable(cbind(Nome,Código,Descrição, Classificação),
caption = 'Descrição dos códigos da tabela com a seguinte indentificação da variável.')
par(mfrow = c(1,2))
datax$X7 %>%  table(.) %>% barplot(xlab='X7')
datax$X8 %>%  table(.) %>% barplot(xlab='X8')
boxplot(datax_ajusdet)
library(ggcorrplot)
library(dplyr)
pmat = dplyr::select(datax,!matches("adj")) %>% select_if(is.numeric) %>% cor_pmat()
dplyr::select(datax,!matches("adj")) %>% select_if(is.numeric) %>% cor(.) %>%
ggcorrplot( type = "lower", p.mat = pmat, hc.order = TRUE,lab = TRUE)
set.seed(10)
dados_train <- datax[sample(nrow(datax), 57, replace = F),] %>% data.frame()
dados_valid <- anti_join(datax, dados_train, by="ID") %>% data.frame()
# inbalanced data
table(dados_train$X8)
library(plotly)
require(gridExtra)
require(ggplot2)
library("patchwork")
g0<-ggplot(data = dados_train, aes(x=X6, X10, color = X8))+
geom_point()+
geom_smooth( method=lm, se=FALSE)+theme_bw()
g1<-ggplot(data = dados_train, aes(x=X11, X10, color = X8))+
geom_point()+
geom_smooth( method=lm, se=FALSE)+theme_bw()+ ylab("")
g0+g1+plot_layout(guides = "collect")
### ANANDA CODE
# Avaliando quais variaveis tem significância
# library("tidyverse")
# library("repurrrsive")
# summary(aov(X10 ~ X8*X6*X11*X7, data=dados_train))
# lista <- map_df(, extract, c("Df", "Sum Sq", "Mean Sq", "F value", "Pr(>F)"))
#
# knitr::kable(teste)
boxplot(dados_train$X10~dados_train$X8)
summary(aov(dados_train$X10~dados_train$X8))
library(xtable)
options(xtable.floating = T)
options(xtable.timestamp = "")
options(xtable.comment = FALSE)
# Avaliando quais variaveis tem significância
k<-summary(aov(X10 ~ X1adj*X8+X6adj*X8+X11adj*X8+X7*X8, data=dados_train))
print.xtable(xtable(k,caption = c('Modelo 1'),
caption.placement = "top") )
table(dados_train$X8)
modelo_inicial <- lm(X10 ~ X1adj*X8 + X6adj +X7*X8, data=dados_train)
print.xtable(xtable(summary(modelo_inicial),caption = c('$X10 = X1adj*X8 + X6adj +X7*X8$'),
caption.placement = "top") )
modelo_inicial <- lm(X10 ~  X6adj+X7, data=dados_train)
print.xtable(xtable(summary(modelo_inicial),caption = c('$X10 =  X6adj+X7$'),
caption.placement = "top") )
print.xtable(xtable(summary(modelo_inicial),caption = c('$X10 =  X6adj+X7$'),
caption.placement = "top") )
k<-shapiro.test(modelo_inicial$residuals)
k<- cbind(k$method, k$p.value)
print.xtable(xtable(k))
library(MASS)
k<-boxcox(modelo_inicial)
lambda<- k$x[which.max(k$y)]
dados_train['X10_cox'] <- (dados_train$X10^lambda-1)/lambda
modelo_inicial_cox <- lm(X10_cox ~X6adj+X7, data=dados_train)
print.xtable(xtable(summary(modelo_inicial_cox),caption = c('$X10_cox ~X6adj+X7$'),
caption.placement = "top") )
k<-shapiro.test(modelo_inicial_cox$residuals)
k<- cbind(k$method, k$p.value)
print.xtable(xtable(k))
require(MASS)
library(caret)
# Teste de multicolinearidade Gif (>1 indica multicolinearidade)
# car::vif(modelo_inicial)
par(mfrow=c(2,2))
plot(modelo_inicial_cox)
modelo_inicial_cox <- lm(X10_cox ~  X6adj+X7, data=dados_train[-c(18,48,46),])
print.xtable(xtable(summary(modelo_inicial_cox),caption = c('$X10_cox =  X6adj+X7$'),
caption.placement = "top") )
k<-shapiro.test(modelo_inicial_cox$residuals)
k<- cbind(k$method, k$p.value)
print.xtable(xtable(k))
par(mfrow=c(2,2))
plot(modelo_inicial_cox)
# predições
predictions <- modelo_inicial_cox %>% predict(dados_valid)
k<-data.frame(
RMSE = RMSE(predictions, (dados_valid$X10^lambda-1)/lambda),
R2 = R2(predictions, ((dados_valid$X10)^lambda-1)/lambda)
)
print.xtable(xtable(k,caption = c('Predictions, modelo_inicial_cox'),
caption.placement = "top") )
modmin<-lm(X10_cox ~ X6adj+X7, data=dados_train[-c(18,48,46),])
modcompl<-lm(X10_cox~ X1adj+X2adj+X3adj+X4adj+X5adj+X6adj+X7+X8+X9adj+X11adj, data=dados_train[-c(18,48,46),])
modfim  <- step(modmin, scope=list(lower=modmin, upper=modcompl), direction="both",data=dados_train[-c(18,48,46),], trace = F)
print.xtable(xtable(summary(modfim),caption = c('summary(modfim)'),
caption.placement = "top") )
k<-shapiro.test(modfim$residuals)
k<- cbind(k$method, k$p.value)
print.xtable(xtable(k))
anova(modelo_inicial_cox,modfim) # modelo 2 é melhor
AIC(modelo_inicial_cox,modfim)
anova(modelo_inicial_cox,modfim) # modelo 2 é melhor
AIC(modelo_inicial_cox,modfim)
anova(modelo_inicial_cox,modfim) # modelo 2 é melhor
print.xtable(xtable(anova(modelo_inicial_cox,modfim)))
AIC(modelo_inicial_cox,modfim)
print.xtable(xtable(AIC(modelo_inicial_cox,modfim)))
# quanto menoor melhor
car::vif(modfim)
car::vif(modfim)
print.xtable(xtable(car::vif(modfim)))
car::vif(modfim)
xtable(car::vif(modfim))
car::vif(modfim)
c(car::vif(modfim))
print.xtable(xtable(c(car::vif(modfim))))
matrix(car::vif(modfim))
car::vif(modfim)
str(car::vif(modfim))
as.data.frame(car::vif(modfim))
print.xtable(xtable(as.data.frame(car::vif(modfim))
))
print.xtable(xtable(summary(modsem9))
)
print.xtable(xtable(summary(modsem9))))
print.xtable(xtable(summary(modsem9)))
# quanto menoor melhor
modsem9<-lm(X10_cox ~ X6adj+X7+X3adj+X2adj+X11adj+X1adj+X5adj, data=dados_train[-c(18,48,46),])
summary(modsem9)
print.xtable(xtable(summary(modsem9)))
modsem9<-lm(X10_cox ~ X6adj+X3adj, data=dados_train[-c(18,48,46),])
summary(modsem9)
car::vif(modsem9)
shapiro.test(modsem9$residuals)
predictions <- modsem9 %>% predict(dados_valid)
data.frame(
RMSE = RMSE(predictions, (dados_valid$X10^lambda-1)/lambda),
R2 = R2(predictions, (dados_valid$X10^lambda-1)/lambda)
)
modsem6<-lm(X10_cox ~ X9adj+X7+X3adj+X2adj+X11adj+X1adj+X5adj, data=dados_train[-c(18,48,46),])
summary(modsem6)
modsem6<-lm(X10_cox ~ X9adj+X3adj, data=dados_train[-c(18,48,46),])
summary(modsem6)
car::vif(modsem6)
shapiro.test(modsem6$residuals)
predictions <- modsem6 %>% predict(dados_valid)
data.frame(
RMSE = RMSE(predictions, (dados_valid$X10^lambda-1)/lambda),
R2 = R2(predictions, (dados_valid$X10^lambda-1)/lambda)
)
anova(modfim,modsem6)
anova(modfim,modsem9)
AIC(modsem9,modsem6)
print.xtable(xtable(summary(modsem9)))
print.xtable(xtable(k,caption = c('Predictions, modelo_inicial_cox'),
caption.placement = "top") )
print.xtable(xtable(summary(aov(dados_train$X10~dados_train$X8)),caption = c(''),
caption.placement = "top") )
print.xtable(xtable(table(dados_train$X8)),caption = c(''),
caption.placement = "top") )
print.xtable(xtable(table(dados_train$X8),caption = c(''),
caption.placement = "top") )
table(dados_train$X8)
print.xtable(xtable(table(dados_train$X8),caption = c(''),
caption.placement = "top") )
knitr::opts_chunk$set(echo = TRUE, warning = F)
knitr::opts_chunk$set(echo = TRUE, warning = F, message=FALSE)
Nome <- names(data)
Código <- names(datax)
Nome
data
library(readxl)
library(dplyr)
datax <- read_excel(path ='Dados_trabalho_20212.xlsx')
datax <- na.omit(datax)
datax$X7 <- as.factor(datax$X7)
datax$X8 <- as.factor(datax$X8)
datax$ID <- as.factor(datax$ID)
# Dados ajustados
# Dados ajustados
data <- datax
datax_ajusdet <-datax %>% select_if(is.numeric) %>% scale()
datax[,paste0(colnames(datax_ajusdet), 'adj') ] <- datax_ajusdet
data <- datax
names(data) <- c('Número de Identificação', 'Duração da Internação', 'Idade', 'Risco de Infecção', 'Proporção de Culturas de Rotina', 'Proporção de Raio-X de Tórax de Rotina', 'Número de leitos', 'Filiação a Escola de Medicina', 'Região', 'Média diária de pacientes', 'Número de enfermeiro(s)', 'Facilidades e serviços disponíveis')
datax
data
library(readxl)
library(dplyr)
datax <- read_excel(path ='Dados_trabalho_20212.xlsx')
datax <- na.omit(datax)
datax$X7 <- as.factor(datax$X7)
datax$X8 <- as.factor(datax$X8)
datax$ID <- as.factor(datax$ID)
# Dados ajustados
# Dados ajustados
data <- datax
datax_ajusdet <-datax %>% select_if(is.numeric) %>% scale()
datax[,paste0(colnames(datax_ajusdet), 'adj') ] <- datax_ajusdet
data
names(data) <- c('Número de Identificação', 'Duração da Internação', 'Idade', 'Risco de Infecção', 'Proporção de Culturas de Rotina', 'Proporção de Raio-X de Tórax de Rotina', 'Número de leitos', 'Filiação a Escola de Medicina', 'Região', 'Média diária de pacientes', 'Número de enfermeiro(s)', 'Facilidades e serviços disponíveis')
data
Código
Nome
library(readxl)
library(dplyr)
datax <- read_excel(path ='Dados_trabalho_20212.xlsx')
datax <- na.omit(datax)
datax$X7 <- as.factor(datax$X7)
datax$X8 <- as.factor(datax$X8)
datax$ID <- as.factor(datax$ID)
# Dados ajustados
# Dados ajustados
data <- datax
datax_ajusdet <-datax %>% select_if(is.numeric) %>% scale()
datax[,paste0(colnames(datax_ajusdet), 'adj') ] <- datax_ajusdet
data
names(data) <- c('Número de Identificação', 'Duração da Internação', 'Idade', 'Risco de Infecção', 'Proporção de Culturas de Rotina', 'Proporção de Raio-X de Tórax de Rotina', 'Número de leitos', 'Filiação a Escola de Medicina', 'Região', 'Média diária de pacientes', 'Número de enfermeiro(s)', 'Facilidades e serviços disponíveis')
Nome <- names(data)
Nome
datax_ajusdet
library(readxl)
library(dplyr)
datax <- read_excel(path ='Dados_trabalho_20212.xlsx')
datax <- na.omit(datax)
datax$X7 <- as.factor(datax$X7)
datax$X8 <- as.factor(datax$X8)
datax$ID <- as.factor(datax$ID)
# Dados ajustados
# Dados ajustados
data <- datax
data_temp <- datax
datax_ajusdet <-datax %>% select_if(is.numeric) %>% scale()
datax[,paste0(colnames(datax_ajusdet), 'adj') ] <- datax_ajusdet
data
names(data) <- c('Número de Identificação', 'Duração da Internação', 'Idade', 'Risco de Infecção', 'Proporção de Culturas de Rotina', 'Proporção de Raio-X de Tórax de Rotina', 'Número de leitos', 'Filiação a Escola de Medicina', 'Região', 'Média diária de pacientes', 'Número de enfermeiro(s)', 'Facilidades e serviços disponíveis')
# Tabela de nomes X1: Nome variavel
Nome <- names(data)
Código <- names(data_temp)
Descrição <- c('1-113', 'Duração média da internação de todos os pacientes no hospital (em dias)', 'Idade média dos pacientes', 'Probabilidade média estimada de adquirir infecção no hospital (em %)', 'Razão do número de culturas realizadas com relação ao número de pacientes sem sinais ou sintomas de infeção adquirida no hospital, vezes 100.', 'Razão do número de Raio-X de Tórax realizados com relação ao número de pacientes sem sinais ou sintomas de pneumonia, vezes 100.', 'Número médio de leitos no hospital durante o período de estudo', '1 – sim 2 – não', 'Região Geográfica, onde: 1 – NE 2- NC 3 – S e 4 – W', 'Número médio de pacientes no hospital por dia durante o período do estudo', 'Número médio de enfermeiros(as) de tempo-integral ou equivalente registrados e licenciados durante o período de estudo ( número de tempos integrais+metade do número de tempo parcial)', '% de 35 potenciais facilidades e serviços que são fornecidos pelo hospital')
Classificação <- c('Qualitativa ordinal', 'Quantitativa contínua', 'Quantitativa contínua', 'Quantitativa contínua', 'Quantitativa contínua', 'Quantitativa contínua', 'Quantitativa contínua', 'Qualitativa ordinal', 'Qualitativa nominal', 'Quantitativa contínua', 'Quantitativa contínua', 'Quantitativa contínua')
library(knitr)
knitr::kable(cbind(Nome,Código,Descrição, Classificação),
caption = 'Descrição dos códigos da tabela com a seguinte indentificação da variável.')
install.packages('kableExtra')
library(kableextra)
library(kableExtra)
knitr::kable(cbind(Nome,Código,Descrição, Classificação),
caption = 'Descrição dos códigos da tabela com a seguinte indentificação da variável.',
align = "lclr")%>%
kable_styling(latex_options="scale_down") %>%
column_spec(3,width = "0.4in")
knitr::kable(cbind(Nome,Código,Descrição, Classificação),
caption = 'Descrição dos códigos da tabela com a seguinte indentificação da variável.',
align = "lclr")%>%
kable_classic(fixed_thead = T,
full_width = T,
latex_options = c("striped", "scale_down"))%>%
column_spec(1,width = "10em", bold = T, border_right = F)%>%
column_spec(3, width = "10em")
knitr::kable(cbind(Nome,Código,Descrição, Classificação),
caption = 'Descrição dos códigos da tabela com a seguinte indentificação da variável.',
align = "lclr")%>%
kable_classic(fixed_thead = T,
full_width = T,
latex_options = c("striped", "scale_down"))%>%
column_spec(1,width = "10em", bold = T, border_right = F)%>%
column_spec(3, width = "10em")
# Tabela de nomes X1: Nome variavel
Nome <- names(data)
Código <- names(data_temp)
Descrição <- c('1-113', 'Duração média da internação de todos os pacientes no hospital (em dias)', 'Idade média dos pacientes', 'Probabilidade média estimada de adquirir infecção no hospital (em %)', 'Razão do número de culturas realizadas com relação ao número de pacientes sem sinais ou sintomas de infeção adquirida no hospital, vezes 100.', 'Razão do número de Raio-X de Tórax realizados com relação ao número de pacientes sem sinais ou sintomas de pneumonia, vezes 100.', 'Número médio de leitos no hospital durante o período de estudo', '1 – sim 2 – não', 'Região Geográfica, onde: 1 – NE 2- NC 3 – S e 4 – W', 'Número médio de pacientes no hospital por dia durante o período do estudo', 'Número médio de enfermeiros(as) de tempo-integral ou equivalente registrados e licenciados durante o período de estudo ( número de tempos integrais+metade do número de tempo parcial)', '% de 35 potenciais facilidades e serviços que são fornecidos pelo hospital')
# Tabela de nomes X1: Nome variavel
Nome <- names(data)
Código <- names(data_temp)
# Tabela de nomes X1: Nome variavel
Nome <- names(data)
Código <- names(data_temp)
library(readxl)
library(dplyr)
datax <- read_excel(path ='Dados_trabalho_20212.xlsx')
datax <- na.omit(datax)
datax$X7 <- as.factor(datax$X7)
datax$X8 <- as.factor(datax$X8)
datax$ID <- as.factor(datax$ID)
# Dados ajustados
# Dados ajustados
data <- datax
data_temp <- datax
datax_ajusdet <-datax %>% select_if(is.numeric) %>% scale()
datax[,paste0(colnames(datax_ajusdet), 'adj') ] <- datax_ajusdet
data
names(data) <- c('Número de Identificação', 'Duração da Internação', 'Idade', 'Risco de Infecção', 'Proporção de Culturas de Rotina', 'Proporção de Raio-X de Tórax de Rotina', 'Número de leitos', 'Filiação a Escola de Medicina', 'Região', 'Média diária de pacientes', 'Número de enfermeiro(s)', 'Facilidades e serviços disponíveis')
# Tabela de nomes X1: Nome variavel
Nome <- names(data)
Código <- names(data_temp)
Descrição <- c('1-113', 'Duração média da internação de todos os pacientes no hospital (em dias)', 'Idade média dos pacientes', 'Probabilidade média estimada de adquirir infecção no hospital (em %)', 'Razão do número de culturas realizadas com relação ao número de pacientes sem sinais ou sintomas de infeção adquirida no hospital, vezes 100.', 'Razão do número de Raio-X de Tórax realizados com relação ao número de pacientes sem sinais ou sintomas de pneumonia, vezes 100.', 'Número médio de leitos no hospital durante o período de estudo', '1 – sim 2 – não', 'Região Geográfica, onde: 1 – NE 2- NC 3 – S e 4 – W', 'Número médio de pacientes no hospital por dia durante o período do estudo', 'Número médio de enfermeiros(as) de tempo-integral ou equivalente registrados e licenciados durante o período de estudo ( número de tempos integrais+metade do número de tempo parcial)', '% de 35 potenciais facilidades e serviços que são fornecidos pelo hospital')
# Tabela de nomes X1: Nome variavel
Nome <- names(data)
Código <- names(data_temp)
Descrição <- c('1-113', 'Duração média da internação de todos os pacientes no hospital (em dias)', 'Idade média dos pacientes', 'Probabilidade média estimada de adquirir infecção no hospital (em %)', 'Razão do número de culturas realizadas com relação ao número de pacientes sem sinais ou sintomas de infeção adquirida no hospital, vezes 100.', 'Razão do número de Raio-X de Tórax realizados com relação ao número de pacientes sem sinais ou sintomas de pneumonia, vezes 100.', 'Número médio de leitos no hospital durante o período de estudo', '1 – sim 2 – não', 'Região Geográfica, onde: 1 – NE 2- NC 3 – S e 4 – W', 'Número médio de pacientes no hospital por dia durante o período do estudo', 'Número médio de enfermeiros(as) de tempo-integral ou equivalente registrados e licenciados durante o período de estudo ( número de tempos integrais+metade do número de tempo parcial)', '% de 35 potenciais facilidades e serviços que são fornecidos pelo hospital')
# Tabela de nomes X1: Nome variavel
Nome <- names(data)
Código <- names(data_temp)
Descrição <- c('1-113', 'Duração média da internação de todos os pacientes no hospital (em dias)', 'Idade média dos pacientes', 'Probabilidade média estimada de adquirir infecção no hospital (em %)', 'Razão do número de culturas realizadas com relação ao número de pacientes sem sinais ou sintomas de infeção adquirida no hospital, vezes 100.', 'Razão do número de Raio-X de Tórax realizados com relação ao número de pacientes sem sinais ou sintomas de pneumonia, vezes 100.', 'Número médio de leitos no hospital durante o período de estudo', '1 – sim 2 – não', 'Região Geográfica, onde: 1 – NE 2- NC 3 – S e 4 – W', 'Número médio de pacientes no hospital por dia durante o período do estudo', 'Número médio de enfermeiros(as) de tempo-integral ou equivalente registrados e licenciados durante o período de estudo ( número de tempos integrais+metade do número de tempo parcial)', '% de 35 potenciais facilidades e serviços que são fornecidos pelo hospital')
